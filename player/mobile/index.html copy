<!DOCTYPE html>
<html>
  <head>
    <link
      rel="preload"
      as="style"
      onload="this.rel = 'stylesheet'"
      href="https://fonts.googleapis.com/css?family=Lobster|Rampart One|Patrick Hand|Akaya Telivigala|Fredoka"
    />
    <link
      id="favicon"
      rel="shortcut icon"
      href="https://cdn.glitch.global/8187eb85-ef03-4f68-a096-53cb26af1633/favicon.ico?v=1644733950223"
    />
    <title>Good music!</title>
    <meta
      charset="utf-8"
      name="viewport"
      content="width=device-width, initial-scale=1"
    />
    <style>
      * {
        box-sizing: border-box;
      }
      body {
        margin: 0;
        font-size: 17px;
        overflow: hidden;
      }
      video {
        position: fixed;
        right: 0;
        bottom: 0;
        min-width: 100%;
        min-height: 100%;
        pointer-events: none;
      }
      .content {
        position: fixed;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        color: #f1f1f1;
        width: 100%;
        height: 100%;
      }
      #myBtn {
        width: 200px;
        font-size: 18px;
        padding: 10px;
        border: none;
        background: pink;
        color: #fff;
        cursor: ns-resize;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }
      #myBtn:hover {
        background: #ddd;
        color: black;
        padding-left: 50px;
      }
      main {
        display: flex;
        flex-direction: column;
        transform: rotatex(10deg);
        -webkit-animation: rotateAngle 6s linear infinite;
        animation: rotateAngle 6s linear infinite;
      }
      button {
        display: block;
        position: relative;
        margin: 0.5em 0;
        padding: 0.8em 2.2em;
        cursor: pointer;
        background: #ffffff;
        border: none;
        border-radius: 0.4em;
        text-transform: uppercase;
        font-size: 1.4em;
        font-family: "Patrick Hand", sans-serif;
        font-weight: 500;
        letter-spacing: 0.04em;
        mix-blend-mode: color-dodge;
        perspective: 500px;
        transform-style: preserve-3d;
        text-decoration: none;
      }
      button:before,
      button:after {
        --z: 0px;
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        content: "";
        width: 100%;
        height: 100%;
        opacity: 0;
        mix-blend-mode: inherit;
        border-radius: inherit;
        transform-style: preserve-3d;
        transform: translate3d(
          calc(var(--z) * 0px),
          calc(var(--z) * 0px),
          calc(var(--z) * 0px)
        );
      }
      button span {
        mix-blend-mode: none;
        display: block;
      }
      button:after {
        background-color: #5d00ff;
      }
      button:before {
        background-color: #ff1731;
      }
      button:hover {
        background-color: #fff65b;
        transition: background 0.3s 0.1s;
        animation: shake 0.5s;
        animation-iteration-count: infinite;
      }
      button:hover:before {
        --z: 0.04;
        -webkit-animation: translateWobble 2.2s ease forwards;
        animation: translateWobble 2.2s ease forwards;
      }
      button:hover:after {
        --z: -0.06;
        -webkit-animation: translateWobble 2.2s ease forwards;
        animation: translateWobble 2.2s ease forwards;
      }
      @-webkit-keyframes rotateAngle {
        0% {
          transform: rotateY(0deg) rotateX(10deg);
          -webkit-animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
          animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
        }
        25% {
          transform: rotateY(20deg) rotateX(10deg);
        }
        50% {
          transform: rotateY(0deg) rotateX(10deg);
          -webkit-animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
          animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
        }
        75% {
          transform: rotateY(-20deg) rotateX(10deg);
        }
        100% {
          transform: rotateY(0deg) rotateX(10deg);
        }
      }
      @keyframes rotateAngle {
        0% {
          transform: rotateY(0deg) rotateX(10deg);
          -webkit-animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
          animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
        }
        25% {
          transform: rotateY(20deg) rotateX(10deg);
        }
        50% {
          transform: rotateY(0deg) rotateX(10deg);
          -webkit-animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
          animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
        }
        75% {
          transform: rotateY(-20deg) rotateX(10deg);
        }
        100% {
          transform: rotateY(0deg) rotateX(10deg);
        }
      }
      @-webkit-keyframes translateWobble {
        0% {
          opacity: 0;
          transform: translate3d(
            calc(var(--z) * 0px),
            calc(var(--z) * 0px),
            calc(var(--z) * 0px)
          );
        }
        16% {
          transform: translate3d(
            calc(var(--z) * 160px),
            calc(var(--z) * 160px),
            calc(var(--z) * 160px)
          );
        }
        28% {
          opacity: 1;
          transform: translate3d(
            calc(var(--z) * 70px),
            calc(var(--z) * 70px),
            calc(var(--z) * 70px)
          );
        }
        44% {
          transform: translate3d(
            calc(var(--z) * 130px),
            calc(var(--z) * 130px),
            calc(var(--z) * 130px)
          );
        }
        59% {
          transform: translate3d(
            calc(var(--z) * 85px),
            calc(var(--z) * 85px),
            calc(var(--z) * 85px)
          );
        }
        73% {
          transform: translate3d(
            calc(var(--z) * 110px),
            calc(var(--z) * 110px),
            calc(var(--z) * 110px)
          );
        }
        88% {
          opacity: 1;
          transform: translate3d(
            calc(var(--z) * 90px),
            calc(var(--z) * 90px),
            calc(var(--z) * 90px)
          );
        }
        100% {
          opacity: 1;
          transform: translate3d(
            calc(var(--z) * 100px),
            calc(var(--z) * 100px),
            calc(var(--z) * 100px)
          );
        }
      }
      @keyframes translateWobble {
        0% {
          opacity: 0;
          transform: translate3d(
            calc(var(--z) * 0px),
            calc(var(--z) * 0px),
            calc(var(--z) * 0px)
          );
        }
        16% {
          transform: translate3d(
            calc(var(--z) * 160px),
            calc(var(--z) * 160px),
            calc(var(--z) * 160px)
          );
        }
        28% {
          opacity: 1;
          transform: translate3d(
            calc(var(--z) * 70px),
            calc(var(--z) * 70px),
            calc(var(--z) * 70px)
          );
        }
        44% {
          transform: translate3d(
            calc(var(--z) * 130px),
            calc(var(--z) * 130px),
            calc(var(--z) * 130px)
          );
        }
        59% {
          transform: translate3d(
            calc(var(--z) * 85px),
            calc(var(--z) * 85px),
            calc(var(--z) * 85px)
          );
        }
        73% {
          transform: translate3d(
            calc(var(--z) * 110px),
            calc(var(--z) * 110px),
            calc(var(--z) * 110px)
          );
        }
        88% {
          opacity: 1;
          transform: translate3d(
            calc(var(--z) * 90px),
            calc(var(--z) * 90px),
            calc(var(--z) * 90px)
          );
        }
        100% {
          opacity: 1;
          transform: translate3d(
            calc(var(--z) * 100px),
            calc(var(--z) * 100px),
            calc(var(--z) * 100px)
          );
        }
      }
      @keyframes shake {
        0% {
          transform: translate(1px, 1px) rotate(0deg);
        }
        10% {
          transform: translate(-1px, -2px) rotate(-1deg);
        }
        20% {
          transform: translate(-3px, 0px) rotate(1deg);
        }
        30% {
          transform: translate(3px, 2px) rotate(0deg);
        }
        40% {
          transform: translate(1px, -1px) rotate(1deg);
        }
        50% {
          transform: translate(-1px, 2px) rotate(-1deg);
        }
        60% {
          transform: translate(-3px, 1px) rotate(0deg);
        }
        70% {
          transform: translate(3px, 1px) rotate(-1deg);
        }
        80% {
          transform: translate(-1px, -1px) rotate(1deg);
        }
        90% {
          transform: translate(1px, 2px) rotate(0deg);
        }
        100% {
          transform: translate(1px, -2px) rotate(-1deg);
        }
      }
      :root {
        --background-color: #ffe5e5;
        --color: #000000;
        --feedback-bg-color: #ffffff;
        --feedback-secondary-color: #ffacac;
        --feedback-primary-color: #53488d;
        --feedback-icon-color: #ffffff;
        --feedback-form-input: #f4f4f4;
      }
      body {
        font-family: "Lobster", sans-serif;
        background-image: url("7HHu.gif");
        background-size: 100%;
      }
      .center-content,
      .submit-feedback {
        display: grid;
        place-content: center;
      }
      .submit-feedback {
        padding: 10px 30px;
        font-size: 24px;
        font-family: Segoe UI;
        cursor: none;
        border-radius: 15px;
        background-color: var(--feedback-secondary-color);
        color: var(--feedback-primary-color);
        transition: all 0.3s;
      }
      .submit-feedback:hover {
        border-radius: 15px;
        color: var(--feedback-primary-color);
        background-color: var(--background-color);
        background-image: url("data:image/svg+xml,%3Csvg width='52' height='26' viewBox='0 0 52 26' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffacac' fill-opacity='0.4'%3E%3Cpath d='M10 10c0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6h2c0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4 3.314 0 6 2.686 6 6 0 2.21 1.79 4 4 4v2c-3.314 0-6-2.686-6-6 0-2.21-1.79-4-4-4-3.314 0-6-2.686-6-6zm25.464-1.95l8.486 8.486-1.414 1.414-8.486-8.486 1.414-1.414z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        animation: animatedBackground 5s linear infinite alternate;
      }
      @keyframes animatedBackground {
        from {
          background-position: 0 0;
        }
        to {
          background-position: 100% 0;
        }
      }
      .bar {
        margin: 0 auto;
        width: 575px;
        border-radius: 30px;
        border: 1px solid #dcdcdc;
      }
      .bar:hover {
        box-shadow: 1px 1px 8px 1px #dcdcdc;
      }
      .bar:focus-within {
        box-shadow: 1px 1px 8px 1px #dcdcdc;
        outline: none;
      }
      .searchbar {
        height: 45px;
        border: none;
        width: 500px;
        font-size: 16px;
        outline: none;
      }
      .voice {
        height: 20px;
        position: relative;
        top: 5px;
        left: 10px;
      }
      #myVideo {
        background-image: url("https://cdn.glitch.global/8187eb85-ef03-4f68-a096-53cb26af1633/7HHu.gif?v=1646408754070");
        background-size: cover;
        position: absolute;
        top: 0;
        left: 0;
        max-width: 100% !important;
        max-height: 100% !important;
        z-index: -1000;
        overflow: hidden;
        object-fit: fill;
      }
      #fullscreenVideo {
        position: absolute;
        top: 0;
        left: 0;
        width: 100% !important;
        height: 100% !important;
        z-index: -1000;
        overflow: hidden;
        object-fit: fill;
        -webkit-filter: blur(15px);
        -moz-filter: blur(15px);
        -o-filter: blur(15px);
        -ms-filter: blur(15px);
        filter: blur(5px);
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }
      #fullscreenVideo:hover {
        -webkit-filter: blur(0px);
        -moz-filter: blur(0px);
        -o-filter: blur(0px);
        -ms-filter: blur(0px);
        filter: blur(0px);
        background-image: url("https://cdn.glitch.global/8187eb85-ef03-4f68-a096-53cb26af1633/twiceMedit.png?v=1644722578572");
      }
      .centerButton {
        margin: auto;
      }
      #time {
        position: fixed;
        bottom: 0;
        right: 0;
        font-size: 50px;
      }
      .blink:hover {
        animation: blinker 1s linear infinite;
      }
      @keyframes blinker {
        50% {
          opacity: 0;
        }
      }
      #snackbar {
        visibility: hidden;
        min-width: 250px;
        margin-left: -125px;
        background-color: #333;
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 16px;
        position: fixed;
        z-index: 1;
        left: 50%;
        bottom: 30px;
        font-size: 17px;
      }
      #snackbar.playing {
        visibility: visible;
        -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
        animation: fadein 0.5s, fadeout 0.5s 2.5s;
      }
      @-webkit-keyframes fadein {
        from {
          bottom: 0;
          opacity: 0;
        }
        to {
          bottom: 30px;
          opacity: 1;
        }
      }
      @keyframes fadein {
        from {
          bottom: 0;
          opacity: 0;
        }
        to {
          bottom: 30px;
          opacity: 1;
        }
      }
      @-webkit-keyframes fadeout {
        from {
          bottom: 30px;
          opacity: 1;
        }
        to {
          bottom: 0;
          opacity: 0;
        }
      }
      @keyframes fadeout {
        from {
          bottom: 30px;
          opacity: 1;
        }
        to {
          bottom: 0;
          opacity: 0;
        }
      }
      #snackbar.paused {
        visibility: visible;
        -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
        animation: fadein 0.5s, fadeout 0.5s 2.5s;
      }
      @-webkit-keyframes fadein {
        from {
          bottom: 0;
          opacity: 0;
        }
        to {
          bottom: 30px;
          opacity: 1;
        }
      }
      @keyframes fadein {
        from {
          bottom: 0;
          opacity: 0;
        }
        to {
          bottom: 30px;
          opacity: 1;
        }
      }
      @-webkit-keyframes fadeout {
        from {
          bottom: 30px;
          opacity: 1;
        }
        to {
          bottom: 0;
          opacity: 0;
        }
      }
      @keyframes fadeout {
        from {
          bottom: 30px;
          opacity: 1;
        }
        to {
          bottom: 0;
          opacity: 0;
        }
      }
      progress[value] {
        appearance: none;
        border: none;
        color: green;
      }
      progress[value]::-webkit-progress-value {
        background-image: linear-gradient(to right, #f44336, #ffc0cb);
        transition: width 1s linear;
      }
      #upload::-webkit-file-upload-button {
        color: white;
        display: inline-block;
        background: #1cb6e0;
        border: none;
        padding: 7px 15px;
        font-weight: 700;
        border-radius: 3px;
        white-space: nowrap;
        cursor: pointer;
        font-size: 10pt;
      }
      input[type="text"] {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        box-sizing: border-box;
        border: 2px solid red;
        border-radius: 4px;
        background: no-repeat;
      }
      .rainbow {
        -webkit-animation: rainbow 5s infinite;
      }
      @-webkit-keyframes rainbow {
        0% {
          color: orange;
        }
        10% {
          color: purple;
        }
        20% {
          color: red;
        }
        30% {
          color: CadetBlue;
        }
        40% {
          color: yellow;
        }
        50% {
          color: coral;
        }
        60% {
          color: green;
        }
        70% {
          color: cyan;
        }
        80% {
          color: DeepPink;
        }
        90% {
          color: DodgerBlue;
        }
        100% {
          color: orange;
        }
      }
      #canvas {
        position: fixed;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        opacity: 0.5;
      }
      ::-webkit-scrollbar {
        width: 20px;
      }
      ::-webkit-scrollbar-track {
        box-shadow: inset 0 0 5px grey;
        border-radius: 10px;
      }
      ::-webkit-scrollbar-thumb {
        background: red;
        border-radius: 10px;
      }
      ::-webkit-scrollbar-thumb:hover {
        background: #b30000;
      }
      video::-webkit-media-controls {
        display: none;
      }
      video::-webkit-media-controls-play-button {
      }
      video::-webkit-media-controls-volume-slider {
      }
      video::-webkit-media-controls-mute-button {
      }
      video::-webkit-media-controls-timeline {
      }
      video::-webkit-media-controls-current-time-display {
      }
      \ [data-tooltip] {
        position: relative;
        z-index: 10;
      }
      [data-tooltip]:before,
      [data-tooltip]:after {
        position: absolute;
        visibility: hidden;
        opacity: 0;
        left: 50%;
        bottom: calc(100% + 5px);
        pointer-events: none;
        transition: 0.2s;
        will-change: transform;
      }
      [data-tooltip]:before {
        content: attr(data-tooltip);
        padding: 10px 18px;
        min-width: 50px;
        max-width: 300px;
        width: max-content;
        width: -moz-max-content;
        border-radius: 6px;
        font-size: 14px;
        background-color: rgba(59, 72, 80, 0.9);
        background-image: linear-gradient(
          30deg,
          rgba(59, 72, 80, 0.44),
          rgba(59, 68, 75, 0.44),
          rgba(60, 82, 88, 0.44)
        );
        box-shadow: 0px 0px 24px rgba(0, 0, 0, 0.2);
        color: #fff;
        text-align: center;
        white-space: pre-wrap;
        transform: translate(-50%, -5px) scale(0.5);
      }
      [data-tooltip]:after {
        content: "";
        border-style: solid;
        border-width: 5px 5px 0px 5px;
        border-color: rgba(55, 64, 70, 0.9) transparent transparent transparent;
        transition-duration: 0s;
        transform-origin: top;
        transform: translateX(-50%) scaleY(0);
      }
      [data-tooltip]:hover:before,
      [data-tooltip]:hover:after {
        visibility: visible;
        opacity: 1;
      }
      [data-tooltip]:hover:before {
        transition-delay: 0.3s;
        transform: translate(-50%, -5px) scale(1);
      }
      [data-tooltip]:hover:after {
        transition-delay: 0.5s;
        transition-duration: 0.2s;
        transform: translateX(-50%) scaleY(1);
      }
      [data-tooltip-location="left"]:before,
      [data-tooltip-location="left"]:after {
        left: auto;
        right: calc(100% + 5px);
        bottom: 50%;
      }
      [data-tooltip-location="left"]:before {
        transform: translate(-5px, 50%) scale(0.5);
      }
      [data-tooltip-location="left"]:hover:before {
        transform: translate(-5px, 50%) scale(1);
      }
      [data-tooltip-location="left"]:after {
        border-width: 5px 0px 5px 5px;
        border-color: transparent transparent transparent rgba(55, 64, 70, 0.9);
        transform-origin: left;
        transform: translateY(50%) scaleX(0);
      }
      [data-tooltip-location="left"]:hover:after {
        transform: translateY(50%) scaleX(1);
      }
      [data-tooltip-location="right"]:before,
      [data-tooltip-location="right"]:after {
        left: calc(100% + 5px);
        bottom: 50%;
      }
      [data-tooltip-location="right"]:before {
        transform: translate(5px, 50%) scale(0.5);
      }
      [data-tooltip-location="right"]:hover:before {
        transform: translate(5px, 50%) scale(1);
      }
      [data-tooltip-location="right"]:after {
        border-width: 5px 5px 5px 0px;
        border-color: transparent rgba(55, 64, 70, 0.9) transparent transparent;
        transform-origin: right;
        transform: translateY(50%) scaleX(0);
      }
      [data-tooltip-location="right"]:hover:after {
        transform: translateY(50%) scaleX(1);
      }
      [data-tooltip-location="bottom"]:before,
      [data-tooltip-location="bottom"]:after {
        top: calc(100% + 5px);
        bottom: auto;
      }
      [data-tooltip-location="bottom"]:before {
        transform: translate(-50%, 5px) scale(0.5);
      }
      [data-tooltip-location="bottom"]:hover:before {
        transform: translate(-50%, 5px) scale(1);
      }
      [data-tooltip-location="bottom"]:after {
        border-width: 0px 5px 5px 5px;
        border-color: transparent transparent rgba(55, 64, 70, 0.9) transparent;
        transform-origin: bottom;
      }
      #seekslider {
        height: 10px;
        margin-bottom: 10px;
        overflow: hidden;
        position: relative;
        width: 400px;
        border-radius: 10em;
        background-color: #c6b300;
        outline: none;
      }
      .custom-file-upload {
        border: 1px solid #ccc;
        display: inline-block;
        padding: 6px 12px;
        cursor: pointer;
      }
      html body .box {
        position: absolute;
        width: 850px;
        height: 500px;
        top: 50%;
        left: 50%;
        margin: -50 0 0 -50px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50px;
        -webkit-backface-visibility: hidden;
        opacity: 0;
        cursor: none;
      }
      html body .box.arrow {
        background: url("http://lmgtfy.com/assets/mouse_arrow_windows_aero-b118000dc97d4558d6db021793acc613.png")
          no-repeat 0 0 transparent;
        border-radius: 0;
      }
      h3::selection {
        background: no-repeat;
        color: pink;
      }
      h2::selection {
        background: no-repeat;
      }
      span::selection {
        background: no-repeat;
      }
      label::selection {
        background: no-repeat;
      }
      div::selection {
        background: no-repeat;
      }
      img::selection {
        background: no-repeat;
      }
      i::selection {
        background: no-repeat;
      }
      p::selection {
        background: no-repeat;
        color: pink;
      }
      b::selection {
        background: no-repeat;
      }
      u::selection {
        background: no-repeat;
      }
      u {
        opacity: 0;
        cursor: default;
      }
      p {
        cursor: default;
      }
      br {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }
      #tut-volume {
        display: none;
        font-size: 5vw;
      }
      #seekslider::-webkit-slider-thumb {
        border-radius: 50%;
        background: #dbc500;
        border: 3px solid #f4f4f4;
      }
      #seekslider::-moz-range-thumb {
        border-radius: 50%;
        background-color: #dbc500;
        border: 3px solid #f4f4f4;
      }
      input[type="range"] {
        -webkit-appearance: none;
        appearance: none;
        width: 40%;
        max-width: 100%;
        height: 10px;
        padding: 5px;
        background: #d3d3d3;
        outline: none;
        opacity: 0.7;
        -webkit-transition: 0.2s;
        transition: opacity 0.2s;
        box-shadow: 0 2px 35px rgba(0, 0, 0, 0.4555);
        border-radius: 10px;
        cursor: pointer;
        scroll-behavior: smooth;
        z-index: 1;
      }
      input[type="range"]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 15px;
        height: 15px;
        background: #fc7027;
        cursor: pointer;
        border-radius: 18px;
        transition: 0.5s ease;
      }
      input[type="range"]::-webkit-slider-thumb:focus,
      input[type="range"]::-webkit-slider-thumb:active {
        padding: 16px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
      }
      .cet-titlebar,
      .cet-titlebar > * {
        font-family: "Fredoka", sans-serif;
      }
      .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0, 0, 0);
        background-color: rgba(0, 0, 0, 0.4);
        -webkit-animation-name: fadeIn;
        -webkit-animation-duration: 0.4s;
        animation-name: fadeIn;
        animation-duration: 0.4s;
      }
      .modal-content {
        position: fixed;
        bottom: 0;
        background-color: #fefefe;
        width: 100%;
        -webkit-animation-name: slideIn;
        -webkit-animation-duration: 0.4s;
        animation-name: slideIn;
        animation-duration: 0.4s;
      }
      .close {
        color: white;
        float: right;
        font-size: 50px;
        font-weight: bold;
      }
      .close:hover,
      .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
      }
      .modal-header {
        padding: 2px 16px;
        background-color: #ffc0cb;
        color: black;
        font-family: Segoe UI;
      }
      .modal-body {
        padding: 2px 16px;
        font-family: Segoe UI;
      }
      .modal-footer {
        padding: 2px 16px;
        background-color: #ffc0cb;
        color: black;
        font-family: Segoe UI;
      }
      @-webkit-keyframes slideIn {
        from {
          bottom: -300px;
          opacity: 0;
        }
        to {
          bottom: 0;
          opacity: 1;
        }
      }
      @keyframes slideIn {
        from {
          bottom: -300px;
          opacity: 0;
        }
        to {
          bottom: 0;
          opacity: 1;
        }
      }
      @-webkit-keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }
      @keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }
      #controls {
        transition: visibility 0s, opacity 0.2s linear;
      }
      .hide-cursor {
        cursor: none;
      }
      .hide-controls {
        opacity: 0;
      }
      .menu {
        width: 120px;
        z-index: 1;
        box-shadow: 0 4px 5px 3px rgba(0, 0, 0, 0.2);
        position: fixed;
        display: none;
        transition: 0.2s display ease-in;
      }
      .menu .menu-options {
        list-style: none;
        padding: 10px 0;
        z-index: 1;
      }
      .menu .menu-options .menu-option {
        font-weight: 500;
        z-index: 1;
        font-size: 14px;
        padding: 10px 40px 10px 20px;
        cursor: pointer;
      }
      .menu .menu-options .menu-option:hover {
        background: rgba(0, 0, 0, 0.2);
      }
      button {
        background: grey;
        border: none;
      }
      button .next {
        color: green;
      }
      button[disabled="false"]:hover .next {
        color: red;
        animation: move 0.5s;
        animation-iteration-count: 2;
      }
      @keyframes move {
        from {
          transform: translate(0%);
        }
        50% {
          transform: translate(-40%);
        }
        to {
          transform: transform(0%);
        }
      }
      #key {
        opacity: 0;
        transition: 1s ease;
      }
      #o {
        opacity: 0;
        transition: 0.7s ease;
      }
    </style>
  </head>
  <body>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://rawgit.com/notifyjs/notifyjs/master/dist/notify.js"></script>
    <script
      src="https://kit.fontawesome.com/f919d403a5.js"
      crossorigin="anonymous"
    ></script>

    <div id="fullscreenVideo">
      <video autoplay loop id="myVideo" preload>
        <source src="" id="src" />
      </video>
      <div class="menu">
        <ul class="menu-options">
          <li class="menu-option">Open URL...</li>
        </ul>
      </div>
      <div style="border-radius: 50px" id="snackbar">
        You pressed wrong key!
      </div>
      <div
        style="
          position: absolute;
          margin-left: auto;
          margin-right: auto;
          left: 0;
          right: 0;
          bottom: 28vw;
          text-align: center;
        "
      >
        <p
          id="tut-volume"
          class="rainbow"
          style="color: white; padding: 5px; font-family: Segoe UI"
        >
          <b>Volume: 100 / 100</b>
        </p>
      </div>
      <div id="controls">
        <div
          style="
            position: absolute;
            margin-right: auto;
            margin-left: auto;
            left: 0;
            right: 0;
            bottom: 3vw;
            text-align: center;
          "
        >
          <input
            onmouseenter="text1()"
            onmouseleave="text2()"
            type="range"
            min="0"
            max="100"
            step="1"
            value="100"
            oninput="SetVolume(this.value)"
            onchange="SetVolume(this.value)"
            id="vol-control"
            style="cursor: ew-resize"
          />
        </div>
        <br />
        <div
          style="
            margin-left: auto;
            margin-right: auto;
            left: 0;
            right: 0;
            text-align: center;
            position: absolute;
            bottom: 1vw;
          "
        >
          <span id="curtimetext" style="color: orange">00:00</span
          ><input
            style="margin: 0 10px 0 10px"
            id="seekslider"
            type="range"
            min="0"
            max="100"
            value="0"
            step="1"
          /><span id="durtimetext" style="color: deeppink">00:00</span>
        </div>
      </div>
    </div>

    <canvas id="canvas"></canvas>
    <!-- The Modal -->
    <div
      id="myModal"
      class="modal"
      style="
        -moz-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
        user-select: none;
        -o-user-select: none;
      "
      unselectable="on"
      onselectstart="return false;"
      onmousedown="return false;"
    >
      <!-- Modal content -->
      <div class="modal-content">
        <div class="modal-header">
          <span class="close">&times;</span>
          <h2>Keyboard shortcuts</h2>
        </div>
        <div class="modal-body">
          <h4 style="color: red">
            Shortcuts is unavailable for mobile browser (still work if you use physical keyboard)
          </h4>
          <p id="firefox">
            [Space] or scroll ROLL button: Play/pause (In fullscreen: Scroll
            anywhere)
          </p>
          <p>[M]: Mute/unmute</p>
          <p>[F]: Enter/exit fullscreen video</p>
          <p>[Left/Right Arrow Key]: Backward/Forward video (5 seconds)</p>
        </div>
        <div class="modal-footer">
          <p
            id="reloadBtn"
            class="centerButton"
            onclick="home()"
            onmouseenter="c1()"
            onmouseleave="c2()"
            style="text-align: center; cursor: pointer"
          >
            <b style="color: black">Reload this player</b>
          </p>
        </div>
      </div>
    </div>
    <div
      class="content"
      style="
        -moz-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
        user-select: none;
        -o-user-select: none;
      "
      unselectable="on"
      onselectstart="return false;"
      onmousedown="return false;"
    >
      <div>
        <h1 class="rainbow" style="text-align: center">
          <b style="cursor: default">Choose any video (or audio)</b>
        </h1>
        <h3 style="opacity: 50%; text-align: center">
          Blur Mode (Made by
          <b
            class="blink"
            style="color: pink; font-family: Segoe Script; cursor: pointer"
            onclick="ytchannel()"
            >Mr884</b
          >)
        </h3>
        <p style="text-align: center">
          <i
            id="title"
            onmouseenter="background1()"
            onmouseleave="background2()"
            onclick="catviz()"
            style="cursor: pointer"
            >A simple web player with many interactive buttons and actions</i
          >
        </p>
      </div>
      <div style="padding: 5vw 0 23vh 2vw; position: fixed">
        <p style="display: none">
          <img
            src="https://cdn.glitch.global/8187eb85-ef03-4f68-a096-53cb26af1633/icons8-download-24.png?v=1646579092277"
          />
          <span
            ><b onclick="installer()" style="cursor: pointer"
              >Download app for Windows</b
            ></span
          >
        </p>
        <button
          id="myBtn"
          data-tooltip="Scroll this (Middle mouse)"
          data-tooltip-location="right"
          onmousewheel="settime()"
          onmouseenter="b1(), o1()"
          onmouseleave="b2(), o2()"
        >
          <span><b style="color: black">ROLL</b></span>
        </button>
        <progress id="progress" max="100" value="0">Progress</progress><br />
        <div id="o" style="position: absolute; left: 5vw">
          <span id="curtimetextbg">00:00</span> /
          <span id="durtimetextbg">00:00</span>
        </div>
        <br />
        <p id="key">
          Click
          <b
            id="hint"
            style="color: pink; font-family: Segoe Print"
            onclick="showname()"
            onmouseenter="sansclick()"
          >
            ROLL
          </b>
          to see all keyboard shortcuts
        </p>
      </div>
      <div style="position: absolute; bottom: 3vw; left: 1vw; right: 1vw">
        <form style="text-align: center">
          <label for="upload" class="custom-file-upload">
            <i class="fa-solid fa-eject"></i> Choose file...
          </label>
          <input
            type="file"
            id="upload"
            style="display: none"
            accept="audio/*,video/*"
          />
          <span id="shortcut1" style="margin-left: 6px">Ctrl + O</span>
          <a style="display: none" href="#" id="mylink" accesskey="o"
            >Click me</a
          >
        </form>
        <br />
        <form style="text-align: center; display: none">
          <label for="path" class="custom-url"> </label>
          <input
            type="text"
            onchange="play()"
            onclick="this.setSelectionRange(0, this.value.length)"
            id="path"
            placeholder="or paste DIRECT video url here (click outside this box to play if you pasted it) and.....    I CAN'T PLAY YOUTUBE VIDEO :("
          />
        </form>
        <br />
        <main>
          <div id="clock" onload="currentTime()" class="submit-feedback"></div>
          <div id="time"></div>
        </main>
      </div>
    </div>

    <script>
      var video = document.getElementById("myVideo");
      var btn = document.getElementById("myBtn");
      var badtime = document.getElementById("reloadBtn");
      var unit = "s";
      var x = document.getElementById("snackbar");
      var elem = document.getElementById("fullscreenVideo");
      var seekslider = document.getElementById("seekslider");
      var curtimetext = document.getElementById("curtimetext");
      var durtimetext = document.getElementById("durtimetext");
      var sanssrc = document.getElementById("myVideo");
      var name = document.getElementById("upload");
      var controls = document.getElementById("controls");
      function settime() {
        if (video.played) console.log(video.currentTime);
        setInterval(function () {
          console.log(video.currentTime);
          document.getElementById("time").innerHTML =
            Math.round(video.currentTime) + unit;
        }, 1000);
      }
      const progress = document.getElementById("progress");
      function progressLoop() {
        setInterval(function () {
          progress.value = Math.round(
            (myVideo.currentTime / myVideo.duration) * 100
          );
        });
      }

      progressLoop();

      function playPageTitle() {
        newPlayTitle = "Playing!";
        document.title = newPlayTitle;
      }
      function pausePageTitle() {
        newPauseTitle = "Paused!";
        document.title = newPauseTitle;
      }
      async function changePageTitle() {
        var name = document.getElementById("upload");
        await sleep(1000);
        newPageTitle = name.files.item(0).name;
        document.title = newPageTitle;
      }

      function musicTitle() {
        var name = document.getElementById("upload");
        if (src != "") {
          musicTitle = name.files.item(0).name;
          document.title = musicTitle;
        }
      }

      $(".menu-option").click(function () {
        boxplay();
      });

      if (navigator.userAgent.indexOf("Firefox") !== -1) {
        // Do Firefox-related activities
        document.getElementById("firefox").innerHTML =
          "[Space] or scroll ROLL button: Play/pause (In fullscreen: Scroll anywhere) <u>------------------------------------------------------------------------------</u> <b>Scroll in Firefox is unstable</b>";
      }

      function home() {
        location.reload(true);
      }
      function sleep(ms) {
        return new Promise((resolve) => setTimeout(resolve, ms));
      }
      function bpControl() {
        var name = document.getElementById("upload");
        if (video.paused) {
          video.play();
          btn.innerHTML = "ROLL (⏸️)";
          playPageTitle();
          changePageTitle();
          $.notify("Playing!", {
            style: "happyblue",
            className: "superblue",
          });
        } else {
          video.pause();
          btn.innerHTML = "ROLL (▶)";
          pausePageTitle();
          changePageTitle();
          $.notify("Paused!", {
            style: "happyblue",
            className: "superblue",
          });
        }
      }

      function play() {
        var url = document.getElementById("path").value;
        $("#src").attr("src", url);
        document.getElementById("myVideo").load();
      }

      function boxplay() {
        var boxurl = prompt(
          "Enter your url - Don't support Youtube links (DELETE AMOGUS OR YOU SUS)",
          "amogus"
        );
        $("#src").attr("src", boxurl);
        if (boxurl === null) {
          alert("Ok amogus!");
          return; //break out of the function early
        } else if (boxurl === "") {
          alert("Ok amogus!");
          return;
        } else if (boxurl === "amogus") {
          alert("Ok amogus!");
          $("#src").attr(
            "src",
            "https://cdn.glitch.global/8187eb85-ef03-4f68-a096-53cb26af1633/y2mate.com%20-%20amogus_1080p.mp4?v=1649084678121"
          );
          document.getElementById("myVideo").load();
          $("#favicon").attr(
            "href",
            "https://cdn.glitch.global/8187eb85-ef03-4f68-a096-53cb26af1633/favicon.ico?v=1649085413174"
          );
          document.title = "YOU SUS. NOW RELOAD THIS PAGE";
          return;
        }
        alert("Ok! \n \nYou can't play url video while play local file");
        document.getElementById("myVideo").load();
      }

      // Menu

      const menu = document.querySelector(".menu");
      const menuOption = document.querySelector(".menu-option");
      let menuVisible = false;

      const toggleMenu = (command) => {
        menu.style.display = command === "show" ? "block" : "none";
        menuVisible = !menuVisible;
      };

      const setPosition = ({ top, left }) => {
        menu.style.left = `${left}px`;
        menu.style.top = `${top}px`;
        toggleMenu("show");
      };

      window.addEventListener("click", (e) => {
        if (menuVisible) toggleMenu("hide");
      });

      menuOption.addEventListener("click", (e) => {
        console.log("mouse-option", e.target.innerHTML);
      });

      window.addEventListener("contextmenu", (e) => {
        e.preventDefault();
        const origin = {
          left: e.pageX,
          top: e.pageY,
        };
        setPosition(origin);
        return false;
      });

      function installer() {
        if (video.played) {
          video.pause();
          btn.innerHTML = "ROLL";
          window.open(
            "https://cdn.glitch.me/8187eb85-ef03-4f68-a096-53cb26af1633/LAG%20Setup.exe?v=1648524861293"
          );
        }
      }
      function catviz() {
        if (video.played) video.pause();
        btn.innerHTML = "ROLL (▶)";
        window.open(
          "https://drive.google.com/file/d/14aIYGZ_yEeiVws-0PDB7G5Qs-nWIiA-J/view?usp=sharing"
        );
      }
      function sansclick() {}
      function ytchannel() {
        window.open("https://www.youtube.com/channel/UC8Hhy9h1CJiRRajHca1BWJQ");
      }
      function currentTime() {
        let date = new Date();
        let hh = date.getHours();
        let mm = date.getMinutes();
        let ss = date.getSeconds();
        let session = "AM";

        if (hh > 12) {
          session = "PM";
        }

        hh = hh < 10 ? "0" + hh : hh;
        mm = mm < 10 ? "0" + mm : mm;
        ss = ss < 10 ? "0" + ss : ss;

        let time = hh + ":" + mm + ":" + ss + " " + session;

        document.getElementById("clock").innerText = time;
        let t = setTimeout(function () {
          currentTime();
        }, 1000);
      }

      function openFullscreen() {
        if (elem.requestFullscreen) {
          elem.requestFullscreen();
        } else if (elem.webkitRequestFullscreen) {
          /* Safari */
          elem.webkitRequestFullscreen();
        } else if (elem.msRequestFullscreen) {
          /* IE11 */
          elem.msRequestFullscreen();
        }
        document.getElementById("vol-control").style.display = "";
        document.getElementById("curtimetext").style.display = "";
        document.getElementById("durtimetext").style.display = "";
        document.getElementById("seekslider").style.display = "";
      }
      /* Close fullscreen */
      function closeFullscreen() {
        if (document.exitFullscreen) {
          document.exitFullscreen();
        } else if (document.webkitExitFullscreen) {
          /* Safari */
          document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) {
          /* IE11 */
          document.msExitFullscreen();
        }
        document.getElementById("vol-control").style.display = "none";
        document.getElementById("curtimetext").style.display = "none";
        document.getElementById("durtimetext").style.display = "none";
        document.getElementById("seekslider").style.display = "none";
        document.getElementById("tut-volume").style.display = "none";
      }

      function vidSeek() {
        var seekto = video.duration * (seekslider.value / 100);
        video.currentTime = seekto;
      }
      function seektimeupdate() {
        var nt = video.currentTime * (100 / video.duration);
        seekslider.value = nt;
        var curmins = Math.floor(video.currentTime / 60);
        var cursecs = Math.floor(video.currentTime - curmins * 60);
        var durmins = Math.floor(video.duration / 60);
        var dursecs = Math.floor(video.duration - durmins * 60);
        if (cursecs < 10) {
          cursecs = "0" + cursecs;
        }
        if (dursecs < 10) {
          dursecs = "0" + dursecs;
        }
        if (curmins < 10) {
          curmins = "0" + curmins;
        }
        if (durmins < 10) {
          durmins = "0" + durmins;
        }
        curtimetext.innerHTML = curmins + ":" + cursecs;
        durtimetext.innerHTML = durmins + ":" + dursecs;
        curtimetextbg.innerHTML = curmins + ":" + cursecs;
        durtimetextbg.innerHTML = durmins + ":" + dursecs;
      }
      function showname() {
        var name = document.getElementById("upload");
        $.notify("Selected file: " + name.files.item(0).name, {
          style: "happyblue",
        });
      }

      function controls1() {
        controls.style.opacity = 1;
      }
      function controls2() {
        controls.style.opacity = 0;
      }

      function c1() {
        $(".modal-footer").css({ backgroundColor: "#5cb85c" });
      }
      function c2() {
        $(".modal-footer").css({ backgroundColor: "#FFC0CB" });
      }

      function b1() {
        $("#key").css({ opacity: 1 });
      }
      function b2() {
        $("#key").css({ opacity: 0 });
      }

      function o1() {
        $("#o").css({ opacity: 1 });
      }
      function o2() {
        $("#o").css({ opacity: 0 });
      }

      function background1() {
        document.getElementById("myVideo").style.backgroundImage =
          "url('https://cdn.glitch.global/8187eb85-ef03-4f68-a096-53cb26af1633/catviz.png?v=1647951517049')"; // specify the image path here
        document.getElementById("hint").innerText = "KNOCK KNOCK";
        document.getElementById("hint").style.color = "orange";
        document.getElementById("title").innerText =
          "catviz.mp4 (Google Drive)";
        document.getElementById("title").style.color = "orange";
        btn.innerHTML = "KNOCK KNOCK";
        btn.style.color = "orange";
      }
      function background2() {
        document.getElementById("myVideo").style.backgroundImage =
          "url('https://cdn.glitch.global/8187eb85-ef03-4f68-a096-53cb26af1633/7HHu.gif?v=1646408754070')"; // specify the image path here
        document.getElementById("hint").innerText = "ROLL";
        document.getElementById("hint").style.color = "pink";
        document.getElementById("title").innerText =
          "A simple web player with many interactive buttons and actions";
        document.getElementById("title").style.color = "white";
        btn.innerHTML = "ROLL";
        btn.style.color = "black";
      }
      function text1() {
        document.getElementById("tut-volume").style.display = "unset";
      }
      function text2() {
        document.getElementById("tut-volume").style.display = "none";
      }

      function detectmobilebrowser() {
        var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
        if (isMobile) {
          alert("Moblie");
        }
      }

      function SetVolume(val) {
        video.volume = val / 100;
        vlume = video.volume * 100;
        vume = vlume.toFixed();
        document.getElementById("tut-volume").innerHTML =
          "<b>Volume: " + vume + " /" + " 100</b>";
        video.muted = false;
        if (vume == 0) {
          document.getElementById("tut-volume").innerHTML = "<b>Muted!</b>";
        }
      }

      currentTime();
      // Add event listeners
      seekslider.addEventListener("change", vidSeek, false);
      video.addEventListener("timeupdate", seektimeupdate, false);
      window.addEventListener(
        "keyup",
        function (e) {
          if (e.keyCode == 70) {
            if (
              window.fullScreen ||
              (window.innerWidth == screen.width &&
                window.innerHeight == screen.height)
            ) {
              closeFullscreen();
            } else {
              openFullscreen();
            }
          }
        },
        false
      );

      myBtn.addEventListener("contextmenu", () => {
        if (document.pictureInPictureElement) {
          document.exitPictureInPicture();
        } else {
          video.requestPictureInPicture();
        }
      });

      $(window).bind("keydown", function (e) {
        if (e.ctrlKey || e.metaKey) {
          switch (String.fromCharCode(e.which).toLowerCase()) {
            case "o":
              e.preventDefault();
              console.log("1a");

              $("#upload").click();
              //alert("hello");

              console.log("1b");
              return false;
          }
        }
        return true;
      });
      // Try using right-click on the preview page. This script disables that functionality.
      window.addEventListener(
        "contextmenu",
        function (e) {
          e.preventDefault();
        },
        false
      );
      function handleFiles(event) {
        var files = event.target.files;
        $("#src").attr("src", URL.createObjectURL(files[0]));
        document.getElementById("myVideo").load();
      }

      document
        .getElementById("upload")
        .addEventListener("change", handleFiles, false);
      document
        .getElementById("upload")
        .addEventListener("change", musicTitle, false);
      document
        .getElementById("upload")
        .addEventListener("change", showname, false);
      /* The flag that determines whether the wheel event is supported. */
      var supportsWheel = false;

      /* The function that will run when the events are triggered. */
      function DoSomething(e) {
        /* Check whether the wheel event is supported. */
        if (e.type == "wheel") supportsWheel = true;
        else if (supportsWheel) return;

        /* Determine the direction of the scroll (< 0 → up, > 0 → down). */
        var delta = (e.deltaY || -e.wheelDelta || e.detail) >> 10 || 1;

        /* ... */
        console.log(delta);
      }

      /* Add the event listeners for each event. */
      btn.addEventListener("wheel", bpControl);
      btn.addEventListener("mousewheel", bpControl);
      btn.addEventListener("DOMMouseScroll", bpControl);
      elem.addEventListener("wheel", bpControl);
      elem.addEventListener("mousewheel", bpControl);
      elem.addEventListener("DOMMouseScroll", bpControl);

      window.addEventListener(
        "keydown",
        function (e) {
          if (e.keyCode == 32) {
            bpControl();
          }
          if (e.keyCode == 77) {
            if (video.muted == false) {
              video.muted = true;
              $.notify("Muted!", "success");
            } else {
              video.muted = false;
              $.notify("Unmuted!", "success");
            }
          }
        },
        false
      );
      // Visualizer
      window.onload = function () {
        var file = document.getElementById("upload");
        var audio = document.getElementById("myVideo");

        file.onchange = function () {
          var files = this.files;
          audio.src = URL.createObjectURL(files[0]);
          audio.load();
          audio.play();
          var context = new AudioContext();
          var src = context.createMediaElementSource(audio);
          var analyser = context.createAnalyser();

          var canvas = document.getElementById("canvas");
          canvas.width = window.innerWidth;
          canvas.height = window.innerHeight;
          var ctx = canvas.getContext("2d");

          src.connect(analyser);
          analyser.connect(context.destination);

          analyser.fftSize = 256;

          var bufferLength = analyser.frequencyBinCount;
          console.log(bufferLength);

          var dataArray = new Uint8Array(bufferLength);

          var WIDTH = canvas.width;
          var HEIGHT = canvas.height;

          var barWidth = (WIDTH / bufferLength) * 2.5;
          var barHeight;
          var x = 0;

          function renderFrame() {
            requestAnimationFrame(renderFrame);

            x = 0;

            analyser.getByteFrequencyData(dataArray);

            ctx.fillStyle = "#000";
            ctx.fillRect(0, 0, WIDTH, HEIGHT);

            for (var i = 0; i < bufferLength; i++) {
              barHeight = dataArray[i];

              var r = barHeight + 25 * (i / bufferLength);
              var g = 250 * (i / bufferLength);
              var b = 50;

              ctx.fillStyle = "rgb(" + r + "," + g + "," + b + ")";
              ctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);

              x += barWidth + 1;
            }
          }

          audio.play();
          renderFrame();
        };
      };

      // Mobile user
      if (window.innerHeight > window.innerWidth) {
        alert("This player work perfectly in PC!");
        $("#shortcut1").css("display", "none");
      } else if (window.innerHeight < window.innerWidth) {
        alert(
          "This player is customized for mobile user but you can still use it in PC"
        );
      }

      var vids = $("video");
      $.each(vids, function () {
        this.controls = false;
      });
      //Loop though all Video tags and set Controls as false

      // Hide controls
      // Cursor
      elem.addEventListener("mousemove", (e) => {
        const timer = elem.getAttribute("timer");
        if (timer) {
          clearTimeout(timer);
          elem.setAttribute("timer", "");
        }
        const t = setTimeout(() => {
          elem.setAttribute("timer", "");
          elem.classList.add("hide-cursor");
        }, 1500);
        elem.setAttribute("timer", t);

        elem.classList.remove("hide-cursor");
      });
      // Controls
      elem.addEventListener("mousemove", (e) => {
        const timer = controls.getAttribute("timer");
        if (timer) {
          clearTimeout(timer);
          controls.setAttribute("timer", "");
        }
        const t = setTimeout(() => {
          controls.setAttribute("timer", "");
          controls.classList.add("hide-controls");
        }, 1500);
        controls.setAttribute("timer", t);

        controls.classList.remove("hide-controls");
      });

      const secondsToSkip = 5;
      document.onkeydown = (event) => {
        if (event.keyCode == 37) {
          video.currentTime = video.currentTime - secondsToSkip;
        }
        if (event.keyCode == 39) {
          video.currentTime = video.currentTime + secondsToSkip;
        }
      };

      // Get the modal
      var modal = document.getElementById("myModal");

      // Get the button that opens the modal
      var btn = document.getElementById("myBtn");

      // Get the <span> element that closes the modal
      var span = document.getElementsByClassName("close")[0];

      // When the user clicks the button, open the modal
      btn.onclick = function () {
        modal.style.display = "block";
      };

      // When the user clicks on <span> (x), close the modal
      span.onclick = function () {
        modal.style.display = "none";
      };

      // When the user clicks anywhere outside of the modal, close it
      window.onclick = function (event) {
        if (event.target == modal) {
          modal.style.display = "none";
        }
      };
    </script>
    <script>
      $.notify.addStyle("happyblue", {
        html: "<div><b><span data-notify-text/></b></div>",
        classes: {
          base: {
            "white-space": "nowrap",
            "background-color": "lightblue",
            padding: "5px",
            "font-family": "Segoe UI",
          },
          superblue: {
            color: "white",
            "background-color": "blue",
            "font-family": "Segoe UI",
          },
        },
      });

      $(document).ready(function () {
        if ($("video").prop("muted", false)) {
        }

        $("#clock").click(function () {
          if ($("video").prop("muted")) {
            $("video").prop("muted", false);
            $.notify("Unmuted!", "success");
          } else {
            $("video").prop("muted", true);
            $.notify("Muted!", "success");
          }
        });
      });

      $("#upload").change(function () {
        var i = $(this).prev("label").clone();
        var file = $("#upload")[0].files[0].name;
        $(this).prev("label").text(file);
      });
    </script>
  </body>
</html>
